Устанавливаем Gitlab на компьютер, регистрируемся на сайте Gitlab - 1devorg создаем пустой project с названеим git_laravel
Создаем проект git_laravel (Laravel 10) на компьютере. В терминале PC проекта (git_laravel) инициализируем Git, введя
команду - git init. После чего создасться в проекте директория .git по пути - E:/SKLAD/OSPanel/domains/git_laravel/.git/
Но эта директория скрыта в Windows, нужно "активировать скрытые элементы" в проводнике и увидим папку.

PhpStorm также может не подцепить .git Для исправления этого необходимо перезапустить IDE и тогда можем заметить
- некоторые файлы будут красного цвета.

Важно держать эту папку именно в том проекте-папке с которой работаем, так как она (Git) "следит" за той дирректорией,
в которой она находится (проинициализирована) - видит все папки и изменения в этой директории
Ему не важно что лежит в папке, какие файлы, на каком языке написано и тд Видит и работает с любыми файлами

Но не все папки проекта могут сразу быть видны .git, так как Git видит изначально только те что были изменены
после инициализации. Какие в него не добавлены можно узнать командой - git status
Можем получить следующее сообщение: Неотслеживаемые файлы:
                                     (используйте "git add <файл>...", чтобы включить в то, что будет зафиксировано)

Потому необходимо добавить в .git весь проект вручную их из выпавшего списка -
"git add <файл>" или все сразу - "git add *"

Теперь все красные файлы проекта станут Зеленого цвета.

Таким образом созданный project - git_laravel на сайте Gitlab.com становится удаленным репозитарием для нашего - .git
С которого мы будем клонировать наш проект с компьютера

Теперь необходимо сделать COMMIT - ЗАФИКСИРОВАТЬ изменения командой - git commit. Если хотим чтобы еще и с коментирование
то добавляем к окманде - -m "<message>" - к примеру - git commit -m "init git_laravel"
После чего файлы проекта примут Белый цвет

Таким образом проверяем начиная с Инструкции добавлены ли файлы в отслеживаемые - git status, если есть таковые
добавляем - git add <файл>, далее Фиксируем - git commit ... Также поступаем если изменили какой либо файл

По итогу должны получить такое сообщение в терминале: On branch master
                                                      nothing to commit, working tree clean



        !!!!!!  Git в целом и Git в Php Storm 6. Заливаем проект на github/gitlab. Первый push на github/gitlab

Ветка Master уже создана предыдущей командой - git init, и не нужно сейчас пока добавлять дополнительные ветки.
Можно к примеру создать новую ветку командой на примере Master ветки - dit branch -M main

Теперь нужно Запушить проект на удаленный репозитарий. Деаем это командой -
git remote add origin https://github.com/1devorg/git_laravel.git Вместо "origin" може написать все что захотим
это лишь название. После для окончательного Пуша необходимо прописать команду - git push -u origin main
Где origin это просто название которое заменяем на свое - github а main означает Master ветка,
но у нас она называется - master (видели ранее в терминале после git init)

И так первая команда - git remote add github https://gitlab.com/1devorg/git_laravel.git
Вторая окончательная - git push -u github master

Но, если перед этим не предложит поключиться к GitHub нужно подключиться через логин и пароль 1devorg командой для Логина -
git config credential.username "1devorg" и выйдет окошко Входа в GitHub

                             ТЕПЕРЬ проделаем тоже самое для GitLab

      !!!!!!  Git в целом и Git в Php Storm 7. Заливаем проект на gitlab. push на gitlab. Commit и push в phpstorm

Пушим наш готовый проект через команду - git remote add gitlab https://gitlab.com/1devorg/git_laravel.git
Путь берем зайдя в папку репозитария в - Code - Clone with HTTPS - https://gitlab.com/1devorg/git_laravel.git

Проект готов Запушиться. И теперь можем посмотреть какие пути отправки пуша есть командой - git remote -v
И получим: gitlab  https://gitlab.com/1devorg/git_laravel (fetch)
           gitlab  https://gitlab.com/1devorg/git_laravel (push)

gitlab - это придуманное нами выше название (git remote add gitlab ...)

Позже рассмотрим что это за fetch и push Сейчас же сделаем окончательный пуш командой - git push gitlab master

Теперь все Запушилось, можем это увидеть зайдя в Репозитарий проекта и выбрав ветку - master, где будет лежать проект

Так же если прямо в проекте Laravel в IDE добавим какой-то файл, IDE само спросит, добавить ли файл в .git
Можно согласившись нажать - больше не спрашивать. И дальнейшие внесение файлов будут происходить автоматически
Изменяя цвет с красного на зеленый

С GitLab можно работать напрямую из PhpStorm. Наверху есть галочка - commit, которая покажет в какие
файлы внесены изменения и нужно добавить с возможностью комментрования внизу окна, куда вписываем тоже
что и в консоли ранее, после флага -m (git commit -m "init git_laravel+changed instrukcii.txt")
И выбор просто Закомитить или Закомитить и Пушнуть
Стрелка - PUSH есть также наверху в блоке Git


